// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Coffee {
  id          Int      @id @default(autoincrement())
  created_at  DateTime @default(now())
  updated_at  DateTime @updatedAt
  name        String
  price       String
  description String
  image       String[]
  webAddress  String   @unique
  roast_id    Int
  roast       Roast    @relation(fields: [roast_id], references: [id])
  brand_id    Int
  brand       Brand    @relation(fields: [brand_id], references: [id])
  country_id  Int
  country     Country  @relation(fields: [country_id], references: [id])
  region_id   Int
  region      Region   @relation(fields: [region_id], references: [id])
  reviews     Review[]
}

model Brand {
  id          Int      @id @default(autoincrement())
  created_at  DateTime @default(now())
  updated_at  DateTime @updatedAt
  name        String
  description String
  image       String
  address     String
  webAddress  String
  coffees     Coffee[]
}

model Country {
  id         Int      @id @default(autoincrement())
  created_at DateTime @default(now())
  updated_at DateTime @updatedAt
  name       String
  coffees    Coffee[]
}

model Region {
  id         Int      @id @default(autoincrement())
  created_at DateTime @default(now())
  updated_at DateTime @updatedAt
  name       String
  coffees    Coffee[]
}

model Review {
  id         Int      @id @default(autoincrement())
  created_at DateTime @default(now())
  updated_at DateTime @default(now())
  first_name String
  last_name  String
  text       String
  rating     Float
  coffee_id  Int
  coffee     Coffee   @relation(fields: [coffee_id], references: [id])
  user_id    Int
  user       User     @relation(fields: [user_id], references: [id])
}

model Roast {
  id         Int      @id @default(autoincrement())
  created_at DateTime @default(now())
  updated_at DateTime @updatedAt
  name       String
  coffees    Coffee[]
}

model User {
  id         Int      @id @default(autoincrement())
  created_at DateTime @default(now())
  updated_at DateTime @default(now())
  first_name String
  last_name  String
  address    String
  email      String
  phone      String
  password   String
  reviews    Review[]
}
